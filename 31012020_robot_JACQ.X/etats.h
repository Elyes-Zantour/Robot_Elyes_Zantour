#ifndef ETATS_H
#define	ETATS_H

#define STATE_ATTENTE 0
#define STATE_ATTENTE_EN_COURS 1
#define STATE_TRACE 2
#define STATE_TRACE_EN_COURS 3
#define STATE_AVANCE 4
#define STATE_AVANCE_EN_COURS 5
#define STATE_TOURNE_GAUCHE 6
#define STATE_TOURNE_GAUCHE_EN_COURS 7
#define STATE_TOURNE_DROITE 8
#define STATE_TOURNE_DROITE_EN_COURS 9
#define STATE_TOURNE_SUR_PLACE_GAUCHE 10
#define STATE_TOURNE_SUR_PLACE_GAUCHE_EN_COURS 11
#define STATE_TOURNE_SUR_PLACE_DROITE 12
#define STATE_TOURNE_SUR_PLACE_DROITE_EN_COURS 13
#define STATE_ARRET 14
#define STATE_ARRET_EN_COURS 15
#define STATE_LEGER_GAUCHE 16
#define STATE_LEGER_GAUCHE_EN_COURS 17
#define STATE_LEGER_DROIT 18
#define STATE_LEGER_DROIT_EN_COURS 19

#define PAS_D_OBSTACLE 0
#define OBSTACLE_SOON 1
#define OBSTACLE_A_GAUCHE 2
#define OBSTACLE_A_DROITE 3
#define OBSTACLE_EN_FACE 4
#define OBSTACLE_ENTOURE 5
#define OBSTACLE_COTE_DROIT 6
#define OBSTACLE_COTE_GAUCHE 7

void SetNextRobotStateInAutomaticMode();
void OperatingSystemLoop();

extern int compteurInverseur;

#endif	/* ETATS_H */

